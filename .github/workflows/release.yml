name: Automated Releases

on: push

jobs:
  changelog:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4.2.2
        name: Checkout
      - uses: TriPSs/conventional-changelog-action@latest
        name: Conventional Changelog Action
        id: changelog
        with:
          github-token: ${{ github.token }}
      - uses: actions/github-script@v7.0.1
        name: Delete latest release
        env:
          GH_TOKEN: ${{ github.token }}
        with:
          github-token: ${{ github.token }}
          script: |
            const { owner, repo } = context.repo
            await exec.exec('gh', ['release', 'delete', 'latest', '--cleanup-tag', '--yes']).catch((e) => console.log)
      - uses: actions/create-release@latest
        name: Create new release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: latest
          release_name: latest
          body: ${{ steps.changelog.outputs.clean_changelog }}
      - uses: lasith-kg/dispatch-workflow@v2
        id: workflow-dispatch
        name: 'Dispatch workflow'
        with:
          dispatch-method: workflow_dispatch
          repo: slattman
          owner: slattman
          ref: main
          workflow: default.yml
          token: ${{ secrets.DISPATCH_TOKEN }}
      - uses: actions/github-script@v7.0.1
        name: Delete workflow runs
        env:
          GH_TOKEN: ${{ github.token }}
        with:
          github-token: ${{ github.token }}
          script: |
            const spawn = require('child_process');
            const fs = require('node:fs');
            await spawn.execSync('gh run list --json databaseId -q "map(.databaseId)[0]" > databaseId').catch((e) => console.log) 
            const databaseId = await fs.readFileSync('databaseId').catch((e) => console.log) 
            console.log("databaseId", databaseId)
            await spawn.execSync(`gh run delete ${databaseId}`).catch((e) => console.log)            

            